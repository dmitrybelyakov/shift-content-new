"use strict";var app=angular.module("shiftContentApp",["ngRoute","ngAnimate"]);app.config(["$locationProvider","$routeProvider",function(a,b){a.html5Mode(!0).hashPrefix("!");var c=b;c.otherwise({redirectTo:"/"}),c.when("/",{controller:"MainCtrl",templateUrl:"/modules/shift-content-new/views/main.html"}),c.when("/index/",{redirectTo:"/"}),c.when("/another/",{controller:"MainCtrl",templateUrl:"/modules/shift-content-new/views/another.html"}),c.when("/manage/:contentId/",{controller:"MainCtrl",templateUrl:"/modules/shift-content-new/views/another.html"}),c.when("/feeds/",{controller:"MainCtrl",templateUrl:"/modules/shift-content-new/views/manage-feeds.html"}),c.when("/types/",{controller:"ContentTypes",templateUrl:"/modules/shift-content-new/views/content-types.html",resolve:{contentTypes:["AnotherContentTypeRepository",function(a){return a.query()}]}}),c.when("/field-types/",{controller:"MainCtrl",templateUrl:"/modules/shift-content-new/views/field-types.html"}),c.when("/filter-types/",{controller:"MainCtrl",templateUrl:"/modules/shift-content-new/views/filter-types.html"}),c.when("/validator-types/",{controller:"MainCtrl",templateUrl:"/modules/shift-content-new/views/validator-types.html"})}]);var app=angular.module("shiftContentApp");app.controller("MainCtrl",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]);var app=angular.module("shiftContentApp");app.controller("ContentTypes",["$scope","contentTypes","AnotherContentTypeRepository",function(a,b,c){a.types=b;var d=c;a.deleteType=function(a){console.info("Now delete type"),console.info(a)},a.newTypeForm={},a.formVisible=!1,a.formProgress=!1,a.newType={name:void 0,description:void 0},a.showForm=function(){a.formVisible=!0},a.hideForm=function(){a.newType.name=void 0,a.newType.description=void 0,a.formVisible=!1,a.formProgress=!1,a.newTypeForm.$setPristine()},a.createType=function(){var b=a.newTypeForm;if(!b.$invalid){a.formProgress=!0;var c,e=d.create(a.newType);e.catch(function(a){409===a.status&&(c=a.data)}),e.error(function(a){c?(console.info("Got validation errors:"),console.info(c)):(console.info("Got server error:"),console.info(a))}),e.success(function(b){a.types.push(b),a.hideForm()})}}}]);var app=angular.module("shiftContentApp");app.directive("shiftNavigation",["NavigationService",function(a){return{scope:{},restrict:"EA",templateUrl:"/modules/shift-content-new/views/directives/navigation.html",controller:["$scope","$location",function(b,c){var d=a,e=function(){var a=c.path().substring(1);for(var b in d)for(var e in d[b].items)d[b].items[e].active=a===d[b].items[e].href?!0:!1};e(),b.$on("$routeChangeStart",function(){e()}),b.navigation=d}]}}]);var app=angular.module("shiftContentApp");app.directive("shiftBreadcrumbs",function(){return{scope:{},restrict:"EA",templateUrl:"/modules/shift-content-new/views/directives/breadcrumbs.html"}});var app=angular.module("shiftContentApp");app.directive("routePreloader",["$rootScope","$timeout","$location",function(a,b,c){return{templateUrl:"/modules/shift-content-new/views/directives/view-preloader.html",restrict:"EA",controller:["$scope",function(a){a.message="Loading..."}],link:function(d,e){var f=angular.element,g=!1;e=e.find(".view-preloader"),e.hide(),a.$on("$routeChangeStart",function(){g=!0,b(function(){if(g){var a=f("td.page");e.width(a.width()),e.show()}},150)}),a.$on("$routeChangeSuccess",function(){g=!1,e.hide()});var h=function(a,b){var c=[],d=(a||"").split(":");for(var e in d){var f=d[e];if(0===parseInt(e,10))c.push(f);else{var g=f.match(/(\w+)(.*)/),h=g[1];c.push(b[h]),c.push(g[2]||""),delete b[h]}}return c.join("")},i=d.message;a.$on("$routeChangeError",function(a,f,j,k){var l="Loading failed";k&&(l=l+": "+k.data.content),d.message=l,e.addClass("error"),b(function(){g=!1,e.hide(),e.removeClass("error"),d.message=i;var a="/";j&&(a=h(j.originalPath,j.params)),c.path(a)},4e3)})}}}]),angular.module("shiftContentApp").directive("initialHeight",function(){return{restrict:"A",link:function(a,b){b.css("height",b.height())}}});var app=angular.module("shiftContentApp");app.factory("NavigationService",function(){var a=[{title:"Manage content",items:[{label:"Static page",href:"manage/11/"},{label:"Attachment",href:"manage/12/"},{label:"Shop Item",href:"manage/13/"}]},{title:"Manage content",items:[{label:"Feed collections",href:"feeds/"}]},{title:"Content settings",items:[{label:"Content types",href:"types/"},{label:"Field types",href:"field-types/"},{label:"Filter types",href:"filter-types/"},{label:"Validator types",href:"validator-types/"}]}];return a});var app=angular.module("shiftContentApp");app.factory("MultiTypeLoader",["ContentTypeRepository","$q",function(a,b){return function(){var c=b.defer();return a.query(function(a){c.resolve(a)},function(){c.reject("Unable to load from backend")}),c.promise}}]),app.factory("TypeLoader",["ContentTypeRepository","$route","$q",function(a,b,c){return function(){var d=c.defer(),e=b.current.params.id;return a.get({id:e},function(a){d.resolve(a)},function(){d.reject("Unable to fetch recipe: "+e)}),d.promise}}]);var app=angular.module("shiftContentApp");app.factory("ContentTypeRepository",["$resource",function(a){var b="/api/content/types/:id/",c={id:"@id"},d={get:{method:"GET",isArray:!1},save:{method:"POST",isArray:!0}};return a(b,c,d)}]);var app=angular.module("shiftContentApp");app.factory("AnotherContentTypeRepository",["$http",function(a){var b="/api/content/types/",c={};return c.get=function(c){return a.get(b+c+"").then(function(a){return new ContentType(a.data)})},c.query=function(){return a.get(b).then(function(a){return a.data})},c.create=function(c){return a.post(b,c)},c}]);